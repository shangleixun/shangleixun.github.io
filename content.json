{"meta":{"title":"shallowater 浅水","subtitle":"一滩浅水的梦，是海洋。","description":"一个普通的 iOS 开发者。","author":"尚雷勋","url":"https://shangleixun.github.io","root":"/"},"pages":[],"posts":[{"title":"一道排列组合题的诞生及解决","slug":"A 到 B 点之间一共有几种走法","date":"2019-09-22T07:59:00.000Z","updated":"2019-09-22T07:59:40.856Z","comments":true,"path":"2019/09/22/A 到 B 点之间一共有几种走法/","link":"","permalink":"https://shangleixun.github.io/2019/09/22/A 到 B 点之间一共有几种走法/","excerpt":"","text":"这道题目是面试的最后，一位老板出给我的，我想了半天，只想到这可能需要二叉树的相关知识，而我对二叉树并不熟悉，只好放弃解答。面试的结果已经不重要了（没有写出来，一定是面试不成功啦），但这道题却困扰了我相当几天时间。后来好在想通了解答之法。 题目的具体内容是这样的：A 点的坐标位置为原点，B 点坐标位置为 (4, 4) ，从 A 点出发到 B 点，每次只能向上或向右走一步，问：有几种走法？这种类型的题我没有遇见过，开始只想到二叉树，后来发现用我现有的二叉树知识无法解答。 在前两天的夜里，我拿出本子和笔，打算用演算来解决它。A 点的坐标自然是 (0, 0) ，要达到 (4, 4) ，则有无数种方法。但通过 x 坐标和 y 坐标递增 1 的方式来实现，则是可数的，x 坐标的过程是：x+1 ，x+2 ，x+3 ，x+4 ，同样的，y 坐标的过程是：y+1 ，y+2 ，y+3 ，y+4 。为了方便后面谈到，我们把 x+1…x+4 和 y+1…y+4 分别用 A B C D 和 a b c d 来替代。x 坐标要经过四步到达目标，y 坐标同样是四步。不过两个步骤可以穿插进行，也就是 A B C D 中间可以随意插入 a b c d 的组合——既可以是 abcd 连在一起，也可以是 ab cd 这样分成两部分的形式。 那么问题简化而成的模型就是这样了：有两个序列 A B C D 和 a b c d 。在保证两个序列固定（即 B 必须在 A 之后，其他同理）的前提下，有几种排列组合？我不知道怎么用程序的算法来实现，我想了很久都不知道，于是我只好用一个笨方法来做，一个一个排列。 设定 A B C D 序列固定，在四个字母之间，一共有五个空隙，就当作五个箱子。穷举 a b c d 的所有组合，然后遍历每种组合，看本组合放进五个箱子的情况有多少种，将遍历的每个组合的“情况”加和，就得到了结果。其实读者可以自己去试一试，不过，我今天比较闲，就在这里遍历一下，一起看看罢。 第一种：abcd 。这种情况很好处理，整体一块，五个箱子，也就只有五种情况了，所以这种组合的“情况”数量为 5 。第二种：abc d 和 a bcd 。这是分成两块的第一种情况。两个桃子放五个箱子，有 54 种情况，但两个桃子是固定序列，必须是 abc 在前，d 在后，所以还要除以所有的序列可能，即 2! ，这样得到 abc d 的“情况”数量为：54 / 2! ，还有一个 a bcd 和它是一样的，所以第二种的所有“情况”数量应为：54/2!2 = 20 。第三种：ab cd 。这是分成两块的第二种情况，是上面数量的一半，所以数量为 10 。第四种：ab c d 和 a bc d 和 a b cd 。三个桃子放进五个箱子，有 543 种情况，除以序列的可能 3! ，是 10 ，有三种，所以是 30 。第五种：a b c d 。这是全分离。四个桃子放五个箱子，有 543*2 种情况，除以序列可能 4! ，是 5 。这是所有的组合了，加和一下：5 + 20 + 10 + 30 + 5 = 70 。 实际上的答案也是这样的，正是 70 种。但我一想，这里面有一个东西是我所不熟悉的，就是找出一个整数分成大于 1 的整数的加和的组合的个数。我一时也想不到方法来求出。这还只是 4 ，如果是 100 ，我不就没办法解决了吗？所以还是要找出简便的方法来。 其实简便的方法已经在上面有用到了，就是在乱序中找出固定序列的个数的方法。现在将 A B C D a b c d 当作八个元素，随意组合，则根据初中学到的排列组合的知识，有 8! 种组合。先不管 a b c d 在其中是如何排列的，A B C D 的序列是一定有 4! 种可能的，它包含了 A B C D 的所有组合，即 AB CD （或者 DC BA ） 或者 ABCD （或者 DCBA ）这样的。那么固定序列 A B C D 在其中的占比，则是 4! 分之一。所以在 8! 中，固定序列 A B C D 的数量就容易求出来了：8!/4! 。除了 A B C D ，还有 a b c d 的固定序列。所以，在 8!/4! 的基础上，再除以 4! 即可。答案应该是：8!/(4!*4!) = 70 。 有了这种解法，就可以举一反三，如果 B 点坐标是 (5, 9) ，规则一致，则走法的数量就是：14!/(5!*9!) ；其他同理。 假设 A 点坐标为 (x1, y1) ，B 点坐标为 (x2, y2) ，x2-x1 和 y2-y1 均为正整数，从 A 点到达 B 点，每次只能向上或向右前进一个单位，则共有 (x2-x1+y2-y1)!/((x2-x1)!*(y2-y1)!) 种可能。 这类问题的实际意义我还不太知道，就它的解法，我也只能想到这些了，这篇文字也该在这里收束了。 九月廿二日 1559","categories":[],"tags":[{"name":"hexo 个人博客","slug":"hexo-个人博客","permalink":"https://shangleixun.github.io/tags/hexo-个人博客/"}]},{"title":"简明的 GitHub 个人博客搭建教程","slug":"简明的 GitHub 个人博客搭建教程","date":"2019-09-05T10:05:00.000Z","updated":"2019-09-22T04:26:08.515Z","comments":true,"path":"2019/09/05/简明的 GitHub 个人博客搭建教程/","link":"","permalink":"https://shangleixun.github.io/2019/09/05/简明的 GitHub 个人博客搭建教程/","excerpt":"","text":"心血来潮，终于想依托 GitHub 创建一个个人博客网站。想到之前看过的教程，感觉头皮发麻，有一丝胆怯，最后硬着头皮做了下来。结果差强人意，不过是可以来写博客了而已。 总体上来说，分三步： 第一步：在 GitHub 上建立专门为博客网站的 repo 。流程极简单，在 GitHub 个人主页，创建新的 repo ，有一点要注意，如果是第一次创建 *.github.io 类的 repo ，repo name 必须以用户名为前缀，不然会失败。repo 的名称应该是：username.github.io 。其他默认就好了。 第二步：在电脑上安装 Node.js ，Git ，以及 Hexo 。使用 macOS 的用户，应该是极方便的，只用安装 Node.js 就可以了。安装方法，我是直接在官网下载稳定包，安装就完事。安装 Hexo 的命令如下： 1$ npm install -g hexo-cli macOS 如果提示没有写入权限，可以用 1$ sudo chown -R $USER /usr/local 来获取 /usr/local 目录的写入权限。 第三步：在电脑端创建新的空文件夹，并使用 Hexo 初始化。到这里要停一下，因为我在这里吃了苦头，后来导致重来一遍。在电脑上，建立一个 username.github.io 的文件夹（其实名称不重要，关键是见名知义）。打开终端，进入当前文件夹。执行 1$ hexo init // 此命令必须在新的空文件夹中执行。 的命令。这个命令执行完成后，打开文件夹查看，里面会有好几个文件夹，和一些零散的文件，目前你只需要关注一个叫做 _config.yml 的文件，它在根目录中，它的相关配置决定了稍后你能否将本地内容推送到远程的 username.github.io 仓库，并且在 username.github.io 这个网页中，打开查看 Hexo 默认为你的博客撰写的一条叫 hello world 的博文。 打开 _config.yml ，在最下方的 deploy 处，修改 type 为 git ，另外添加两个字段：repo: https://github.com/username/username.github.io.git 及branch: master 。 然后执行这个命令，安装布署工具： 1$ npm install hexo-deployer-git --save 再执行下面三条命令： 123$ hexo clean // 清理。$ hexo g // g 是 generate 的缩写。$ hexo d // d 为 deploy 的缩写。 在执行布署命令时，会要求你输入你的 GitHub 用户名和密码，直接输入就好了。布署成功后，你应当就可以在 username.github.io 中看到 Hexo 为你撰写的默认博文 hello world 了。 Hexo 的配置之类，是很丰富的，可查看参阅的第二条链接。 参阅：1 GitHub Pages；2 Hexo 官方中文文档；3 史上最详细的 Hexo 博客搭建图文教程；4 GitHub+Hexo 搭建个人网站详细教程（本链接强烈推荐，细致、有效）。 九月五日 1804","categories":[],"tags":[{"name":"hexo 个人博客","slug":"hexo-个人博客","permalink":"https://shangleixun.github.io/tags/hexo-个人博客/"}]}]}